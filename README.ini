README

#Некоторые команды Git:
-git add — добавление файлов в индекс. 1
-git status — проверка статуса репозитория. 1
-git commit — добавление файлов в репозиторий. 1
-git log — просмотр журнала коммитов. 1
-git show — просмотр коммита. 1
-git diff — просмотр изменений до коммита. 1
-git difftool — запуск внешнего инструмента сравнения файлов. 1
-git restore — отмена изменений. 1
-git rm — удаление файлов из индекса. 1
-git reset — откат коммита. 1
-git branch — создание новой ветки. 1
-git checkout — переключение между ветками. 1
-git merge — слияние репозиториев. 1
-git branch -d — удаление ветки. 1
-git remote add origin url — привязка локального и удалённого репозитория. 1
-git remote — просмотр удалённых репозиториев. 1
-git push — отправка изменений в удалённый репозиторий. 1
-git pull — получение изменений из удалённого репозитория


###Понятие репозитория и структура проекта.
Репозиторий - это хранилище кода включающее:
1. Все файлы и папки проекта.
2. Историю изменений (комиты).
3. Информацию о ветках и настройках.
Виды репиториев: 
1. Локальный хранится на пк разработчика (папка .git).
2. Удаленный (remote) размещен на сервере (github, gitlub).

###Структура проекта.
project/        # Корневая папка проекта.
   
   .git/        # Скрытая папка с даными Git (история, нстройки).
   
   stc/         # Исходный код (например, main.py, index.js). 
   
   docs/        # Документация (README.md, API - описание).

   tests/       # Тесты (unit - тесты, интеграционные тесты).
   config/      # Файлы конфигурации (настройки сервера, БД).
   assets/      # Ресурыс (изображения, шрифты).


    .gitignore  # Файл, указывающий, какие файлы Git должен игнорировать.  


Основные элементы:
 - .git/ - служебная папка Git (нельзя удалять!).
 - README.md - описание проекта (обычно в корне).
 - .gitignore - список файлов, которые Git не отслеживает.

 # Жизненный цикл файлов в Git
 Файлы в Git проходят несклько стадий:
 1. Неотслеживаемые (Untracked) - Git о них не знает.
 2. Измененные (Modified) - файлы, которые уже в реквизитории, но были изменены.
 3. Индексированные (Staged) - файлы, подготовленные к компоненту (git add).
 4. Зафиксированные (Comitted) - изменения сохранены в репозиторе (git comit).

 # Важные правила
 Комиты должны быть атомарными -- каждое изменение логически завершённое.
 - gitignore обязателен чтобы не засорять репозиторий ненужными файлами.
 - README.md - лицо проекта, должен содержать описание, устанвку и испольхование.
 